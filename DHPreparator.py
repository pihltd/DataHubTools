#Does some updating of MDF files so they can be used in Data Hub
# CRDC ID added as a field for all nodes
# Marks crdc_id, file_id as no template

import argparse
import yaml

def readYaml(yamlfile):
    with open(yamlfile) as f:
        jsonfile = yaml.load(f, Loader=yaml.FullLoader)
    return jsonfile

def writeYAML(filename, jsonthing):
    with open(filename, 'w') as f:
        yaml.dump(jsonthing, f)
    f.close()

def crdc_prop_ider(propthing):
    #adds the crdc_id and annotations to the MDF property file
    cdrdc_id_entry = {
        'Desc' : 'The crdc_id is a unique identifier that is generated by Data Hub',
        'Type' : 'string',
        'Tags' : {"Template" : 'No'}
    }
    propthing['PropDefinitions']['crdc_id'] = cdrdc_id_entry
    return propthing

def crdc_model_ider(modelthing):
    #Adds a crdc_id field to all properties
    for node, nodestuff in modelthing['Nodes'].items():
        print(node)
        if 'Props' in nodestuff:
            nodestuff['Props'].append('crdc_id')
            print(nodestuff['Props'])
    return modelthing

def main(args):
    propjson = readYaml(args.propfile)
    modeljson = readYaml(args.modelfile)

    propjson = crdc_prop_ider(propjson)
    modeljson = crdc_model_ider(modeljson)

    writeYAML('/home/pihl/Documents/CTDC_ID_Update_Model.yml', modeljson)
    writeYAML('/home/pihl/Documents/CTDC_ID_Update_Props.yml', propjson)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--propfile", required=True,  help="MDF Property file containing CDE IDs and versions")
    parser.add_argument("-m", "--modelfile", required=True, help="MDF Model file")
    #parser.add_argument("-v", "--validate", action='store_true', help="Run validation")

    args = parser.parse_args()

    main(args)